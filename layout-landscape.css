/* layout-landscape.css
   Landscape-only layout for Inch Calc
   - No JS required
   - Uses full screen (minus safe areas)
   - Kills the 420px max-width constraint
   - Left column: Bezel (tape+results) stacked over Memory
   - Right column: Keypad (console + fractions) with responsive tile size
*/

@media (orientation: landscape) {

  /* --- Safety: ensure ancestors don't clamp width --- */
  html, body, #app {
    width: 100%;
    max-width: none;
  }

  /* Respect safe areas on all sides and disable portrait's flex centering */
  body {
    display: block; /* override portrait's flex to avoid unintended centering/narrowing */
    padding:
      calc(env(safe-area-inset-top, 0px) + 10px)
      calc(env(safe-area-inset-right, 0px) + 10px)
      calc(env(safe-area-inset-bottom, 0px) + 10px)
      calc(env(safe-area-inset-left, 0px) + 10px);
    overflow: hidden;
    min-height: 100dvh;
  }

  /* Blow away portrait cap; ensure nothing uses 420px max in landscape */
  :root {
    --card-max: 9999px;
  }

  /* Card fills the entire safe-area viewport and becomes a 2-column grid */
  .card {
    width: calc(100dvw - env(safe-area-inset-left, 0px) - env(safe-area-inset-right, 0px)) !important;
    height: calc(100dvh - env(safe-area-inset-top, 0px) - env(safe-area-inset-bottom, 0px));
    max-width: none !important;
    margin: 0;

    display: grid;
    grid-template-columns: 1fr 1fr;   /* left / right halves */
    grid-auto-rows: minmax(0, 1fr);
    grid-auto-flow: row;
    gap: var(--gap);
    padding: 0;
  }

  /* ===== Left column: Bezel stacked over Memory ===== */

  /* Auto-placement puts .bezel first (col 1 / row 1) */
  .bezel {
    grid-column: 1;
    grid-row: 1;
    margin-bottom: var(--gap);
  }

  /* Ensure memory sits beneath bezel and doesnâ€™t overgrow */
  .memory {
    grid-column: 1;
    grid-row: 2;
    align-self: end;
    max-height: 40dvh;
    overflow: clip; /* keep rounded corners clean */
  }

  /* Results/history usability tweaks in landscape */
  .results .pad { gap: 8px; }
  .history { max-height: 100%; overflow: auto; }

  /* Slightly adapt typography to wider space */
  .row.input { font-size: clamp(20px, 2.4vw, 28px); }
  .output    { font-size: clamp(20px, 2.0vw, 28px); }

  /* ===== Right column: Keypad (console + fractions) ===== */

  /* Keypad fills the entire right column (all rows) */
  .keypad {
    grid-column: 2 / 3;
    grid-row: 1 / -1;

    display: grid;
    grid-template-rows: auto 1fr;  /* console on top, fractions below */
    gap: var(--gap);

    /* Compute a responsive tile height from visible height */
    --available-h: calc(100dvh - env(safe-area-inset-top, 0px) - env(safe-area-inset-bottom, 0px));
    --land-rows: 7;          /* 4 console + 3 fractions = 7 rows */
    --land-gap-count: 8;     /* 4 gaps inside console + 3 inside fractions + 1 between grids */
    --tile-h: calc((var(--available-h) - var(--land-gap-count) * var(--gap)) / var(--land-rows));
  }

  /* Keep tap targets comfy; allow generous size on large tablets */
  :root {
    --tile-min: 44px;
    --tile-max: 120px;
  }

  .console-grid,
  .fract-grid {
    width: 100%;
    --tile: clamp(var(--tile-min), var(--tile-h), var(--tile-max));
  }

  .console-grid { grid-template-rows: repeat(4, var(--tile)); }
  .fract-grid   { grid-template-rows: repeat(3, var(--tile)); }

  /* Preserve your padding token on the keypad panel */
  .keypad.pad { padding: var(--pad); }

  /* Panels should naturally fill; ensure no stray max-widths clip them */
  .panel {
    max-width: none;
  }
}
